---
description: 
globs: 
alwaysApply: true
---
## Read Also
- [insights-cli-help](mdc:.cursor/rules/blizz/definitions/insights-cli-help.mdc)

## Algorithm
When solving problems or starting a new conversation:

1. start out by using the global `insights` CLI to find out and remember the context of related insights.

- Note: Insights is often a better starting place than the repository itself since the information is consolidated, searchable, concise, and source-agnostic. 
- If insights doesn't have the information you're looking for, search around with your available tools (like MCPs or the current repository/workspace) and add or update insights. Please keep insights relatively concise (no more than 1-3 paragraphs for the details section, and one sentance for the overview section)

2. Make multiple calls to insights to gather information as you find out more from the insights you pick up from previous calls.

3. As the conversation continues, please use `insights add` to add insights you pick up on either from conversation or investigation.

4. At the end of your work, summarize what was done with one last insight.

## Important
Only store insights that meet most of these criteria:
1. likely to apply to future situations
2. not basic knowledge found in documentation
3. specific to this codebase/workflow/domain
4. provides clear guidance for future use
5. focused on one specific point or pattern

If you discover contradicting information from results of `insights`:
1.  STOP and take the time to point it out to the user
2.  Search for the real answer using available tools, MCPs and resources (including the system timestamps for when the insights were last created/updated).
3.  Update the bad information with `insights update`

## Focus areas for automatic capture
- **Problem-solution patterns** that could recur
- **Configuration patterns** that work well
- **Workflow optimizations** that improve efficiency
- **Integration patterns** between tools/systems
- **Niche Discoveries** about oddities of a repository
