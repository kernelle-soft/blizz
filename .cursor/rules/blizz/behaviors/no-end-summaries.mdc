---
description: 
globs: 
alwaysApply: true
---
# No End Summaries Rule

Skip redundant end-of-task summaries when the user can directly review the changes.

- **Don't recap what was accomplished** in a "Problem Solved!" or "Summary" section at the end of tasks
- **Don't list out changes made** when they're visible in the file diffs or tool outputs  
- **Don't create bullet-pointed "Results" sections** that just repeat what the user can see
- The user is going to review the actual changes anyway, so summaries are redundant

## When Summaries ARE Appropriate

Basically never. The only time to do so is when the user asks for it explicitly later on in chat, or asks for more details about a decision in a follow-up AFTER you've done the changes.

## Examples

**❌ Bad - Redundant Summary:**
```
✅ Problem Solved!

Here's what we discovered and fixed:
- Added import for colored::control
- Updated three failing tests  
- All tests now pass
```

```
✅ Problem Solved!

Here's what we discovered and fixed:
- Added import for colored::control
- Updated three failing tests  
- All tests now pass
```

```
What I Found & Fixed

The Core Issue: The tests were trying to start servers on the same port (3000) with different INSIGHTS_ROOT environments. When a server was already running from a previous test, new tests would:
  1. Check if any server was running on port 3000 ✅
  2. Assume it was the right one (❌ wrong assumption)
  3. Try to use it with the wrong INSIGHTS_ROOT

...etc...
The Right Decision
Removing these integration tests is the smart move because:

  1. The functionality works perfectly (as we verified manually)
  2. You'll use it frequently and will notice if anything breaks
  3. The test environment issues are complex and would require significant infrastructure changes to fix properly
  4. The core logic is tested elsewhere in unit tests

The code improvements I made (better health checking and environment validation) are still valuable and will help in production!
```

**✅ Good - Just Finish:**
```
All three highlight keyword tests are now passing! The colored crate was disabling ANSI output in test environments, so I added control::set_override(true) to force color output in those specific tests.
```

## Key Points

- **End with the accomplishment**, not a recap of steps
- **Focus on the outcome** rather than listing what was changed
- **Trust that the user will review** the actual changes in detail
- **Be concise** - one or two sentences about the result is enough
