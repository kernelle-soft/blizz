[package]
name = "insights"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "Knowledge management and insight storage system"

[lib]
name = "insights"
path = "src/lib.rs"

[[bin]]
name = "insights"
path = "src/main.rs"

[[bin]]
name = "install_insights_cuda_dependencies"
path = "src/bin/install_insights_cuda_dependencies.rs"

[[bin]]
name = "insights_server"
path = "src/bin/insights_server.rs"

[dependencies]
clap.workspace = true
dirs.workspace = true
chrono.workspace = true
anyhow.workspace = true
colored.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
serde.workspace = true
serde_json.workspace = true
bentley = { workspace = true, features = ["daemon-logs", "schemars"] }

serde_yaml.workspace = true

# Async runtime for daemon IPC
tokio.workspace = true
uuid.workspace = true

# REST API dependencies
axum = { version = "0.7", features = ["macros"] }
schemars = { version = "0.8", features = ["uuid1", "chrono"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# HTTP client dependencies
reqwest.workspace = true
once_cell = "1.17"

# Vector database for embedding storage and similarity search  
lancedb = { version = "0.21.3", default-features = false }

# Additional Arrow dependencies for LanceDB data conversion
arrow = { version = "55", features = ["json"] }
arrow-json = "55"
futures.workspace = true

# Neural embeddings via ONNX (v2 API!) with hardware acceleration
ort = { version = "2.0.0-rc.10", default-features = false, features = [
  "fetch-models",
  "cuda",      # NVIDIA GPU support
  "coreml",    # macOS CoreML support
  "ndarray",   # Required for our ndarray integration
  "std",       # Standard library features
] }
ndarray = { version = "0.16" }
tokenizers = { version = "0.21", default-features = false, features = ["onig"] }

# HuggingFace model hub integration (minimized features for CI performance)
hf-hub = { version = "0.4", default-features = false, features = ["tokio"] }
safetensors = "0.6"

[dev-dependencies]
assert_cmd = "2.0"
assert_fs = "1.1"
predicates = "3.1"
serial_test = "3.2"
tempfile.workspace = true
mockall.workspace = true

[[bin]]
name = "inspect_lancedb"
path = "../../inspect_lancedb.rs"

[features]
default = ["download-onnx-binaries"]
download-onnx-binaries = ["ort/download-binaries"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
